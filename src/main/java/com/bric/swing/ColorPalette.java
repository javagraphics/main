/*
 * @(#)ColorPalette.java
 *
 * $Date: 2014-06-06 20:04:49 +0200 (Fr, 06 Jun 2014) $
 *
 * Copyright (c) 2011 by Jeremy Wood.
 * All rights reserved.
 *
 * The copyright of this software is owned by Jeremy Wood. 
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * Jeremy Wood. For details see accompanying license terms.
 * 
 * This software is probably, but not necessarily, discussed here:
 * https://javagraphics.java.net/
 * 
 * That site should also contain the most recent official version
 * of this software.  (See the SVN repository for more details.)
 */
package com.bric.swing;

import java.awt.Color;

import javax.swing.UIManager;

import com.bric.blog.ResourceSample;
import com.bric.plaf.ColorPaletteUI;

/** This is a <code>JComponent</code> that presents a selection of colors to the user.
 * 
 * @see com.bric.plaf.ColorPaletteUI
 * @see com.bric.plaf.ColorSet
 * 
 * <!-- ======== START OF AUTOGENERATED SAMPLES ======== -->
 * <p><img src="https://javagraphics.java.net/resources/samples/ColorPalette/sample.png" alt="new&#160;com.bric.swing.ColorPalette(&#160;java.awt.Color.blue&#160;)">
 * <!-- ======== END OF AUTOGENERATED SAMPLES ======== -->
 */
@ResourceSample( sample = { "new com.bric.swing.ColorPalette( java.awt.Color.blue )"} )
public class ColorPalette extends ColorComponent {
	private static final long serialVersionUID = 1L;
	private static final String uiClassID = "ColorPaletteUI";
	

	public ColorPalette(Color c) {
		this();
		setColor(color);
	}
	
	public ColorPalette() {
        updateUI();
        setRequestFocusEnabled(true);
        setFocusable(true);
	}
	
    @Override
	public String getUIClassID() {
        return uiClassID;
    }
	
    @Override
	public void updateUI() {
    	if(UIManager.getDefaults().get(uiClassID)==null) {
    		UIManager.getDefaults().put(uiClassID, "com.bric.plaf.HSLColorPaletteUI");
    	}
    	setUI((ColorPaletteUI)UIManager.getUI(this));
    }
	
	public void setUI(ColorPaletteUI ui) {
        super.setUI(ui);
	}
	
	public ColorPaletteUI getUI() {
		return (ColorPaletteUI)ui;
	}
}
