/*
 * @(#)FirstIcon.java
 *
 * $Date: 2014-06-06 20:04:49 +0200 (Fr, 06 Jun 2014) $
 *
 * Copyright (c) 2013 by Jeremy Wood.
 * All rights reserved.
 *
 * The copyright of this software is owned by Jeremy Wood. 
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * Jeremy Wood. For details see accompanying license terms.
 * 
 * This software is probably, but not necessarily, discussed here:
 * https://javagraphics.java.net/
 * 
 * That site should also contain the most recent official version
 * of this software.  (See the SVN repository for more details.)
 */
package com.bric.swing.resources;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;

import javax.swing.Icon;
import javax.swing.SwingConstants;

import com.bric.blog.ResourceSample;

/** An icon to navigate to the beginning of a timeline or animation.
 * 
 * <!-- ======== START OF AUTOGENERATED SAMPLES ======== -->
 * <p><img src="https://javagraphics.java.net/resources/samples/FirstIcon/sample.png" alt="new&#160;com.bric.swing.resources.FirstIcon(&#160;2,&#160;24,&#160;24,&#160;java.awt.Color.lightGray)">
 * <!-- ======== END OF AUTOGENERATED SAMPLES ======== -->
 * 
 * @see LastIcon
 * @see PauseIcon
 */
@ResourceSample( sample= { "new com.bric.swing.resources.FirstIcon( 2, 24, 24, java.awt.Color.lightGray)" })
public class FirstIcon implements Icon {
	TriangleIcon triangleIcon;
	BarIcon barIcon;
	
	public FirstIcon(int barWidth,int width,int height,Color color) {
		triangleIcon = new TriangleIcon(SwingConstants.WEST, width - 2*barWidth, height, color);
		barIcon = new BarIcon(barWidth, height, color);
	}

	public void paintIcon(Component c, Graphics g, int x, int y) {
		barIcon.paintIcon(c, g, x, y);
		triangleIcon.paintIcon(c, g, x + barIcon.getIconWidth()*2, y);
	}

	public int getIconWidth() {
		return barIcon.getIconWidth()*2 + triangleIcon.getIconWidth();
	}

	public int getIconHeight() {
		return Math.max(barIcon.getIconHeight(), triangleIcon.getIconHeight());
	}
	
	static class BarIcon implements Icon {
		Color color;
		int width, height;
		
		public BarIcon(int width,int height,Color color) {
			this.width = width;
			this.height = height;
			this.color = color;
		}

		public void paintIcon(Component c, Graphics g, int x, int y) {
			g.setColor(color);
			g.fillRect(x, y, width, height);
		}

		public int getIconWidth() {
			return width;
		}

		public int getIconHeight() {
			return height;
		}
	}
}
