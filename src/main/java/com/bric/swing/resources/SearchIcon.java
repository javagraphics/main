/*
 * @(#)SearchIcon.java
 *
 * $Date: 2014-06-06 20:04:49 +0200 (Fr, 06 Jun 2014) $
 *
 * Copyright (c) 2011 by Jeremy Wood.
 * All rights reserved.
 *
 * The copyright of this software is owned by Jeremy Wood. 
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * Jeremy Wood. For details see accompanying license terms.
 * 
 * This software is probably, but not necessarily, discussed here:
 * https://javagraphics.java.net/
 * 
 * That site should also contain the most recent official version
 * of this software.  (See the SVN repository for more details.)
 */
package com.bric.swing.resources;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.Icon;

import com.bric.blog.ResourceSample;

/** An icon of a magnifying glass.
 * <P>This is based on what I saw in Firefox and Safari.
 * 
 * <!-- ======== START OF AUTOGENERATED SAMPLES ======== -->
 * <p><img src="https://javagraphics.java.net/resources/samples/SearchIcon/sample.png" alt="new&#160;com.bric.swing.resources.SearchIcon(&#160;12&#160;)">
 * <!-- ======== END OF AUTOGENERATED SAMPLES ======== -->
 */
@ResourceSample( sample= { "new com.bric.swing.resources.SearchIcon( 12 )" })
public class SearchIcon implements Icon {
	int size;
	
	/** Creates a new <code>SearchIcon</code>.
	 * @param size the dimensions of the square in which this
	 * icon will be rendered.  The icon data is vector and will scale
	 * to fit the size you ask for.
	 */
	public SearchIcon(int size) {
		this.size = size;
	}

	public int getIconHeight() {
		return size;
	}

	public int getIconWidth() {
		return size;
	}

	public void paintIcon(Component c, Graphics g0, int x, int y) {
		Graphics2D g = (Graphics2D)g0;
		g = (Graphics2D)g.create();
		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		g.translate(x, y);
		//this was designed around 12-pixel icons
		float scale = (size)/12f;
		g.scale(scale, scale);
		g.setColor(new Color(0x656565));
		g.setStroke(new BasicStroke(2f));
		g.draw(new Ellipse2D.Float(0,0,8,8));
		g.draw(new Line2D.Float(7,7,11.5f,11.5f));
	}
}
